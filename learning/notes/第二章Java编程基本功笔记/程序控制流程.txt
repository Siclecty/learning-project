程序执行的几种常见形式：
分支结构（判断条件来选择某段程序执行);
顺序结构（程序默认执行流程）;
循环结构（重复执行某段程序多次）;

分支结构:

if分支
根据判定的结果（真或假）决定执行某个分支的代码;
if适合做区间匹配;

格式1:
if (条件表达式) {
    语句体1;	
} else {
    语句体2;
}
格式2:
if (条件表达式1) {
    语句体1;	
} else if (条件表达式2) {
    语句体2;	
} else if (条件表达式3) {
    语句体4;	
} 
. . .
else {
    语句体n+1;
}

switch分支:
适合做值匹配的分支选择，结构清晰，格式良好;

格式：
switch(表达式){
    case 值1:
        执行代码...;
        break;
    case 值2:
        执行代码...;
        break;
    … 
    case 值n-1:
        执行代码...;
        break;
    default:
        执行代码n;
}

switch分支注意事项：
表达式类型只能是byte、short、int、char，JDK5开始支持枚举，JDK7开始支持String、不支持double、float、long;
case给出的值不允许重复，且只能是字面量，不能是变量;
不要忘记写break，否则会出现穿透现象;

switch的穿透性
如果代码执行到没有写break的case块，执行完后将直接进入下一个case块执行代码（而且不会进行任何匹配），直到遇到break才跳出分支，这就是switch的穿透性;

switch穿透性能解决什么问题:
存在多个case分支的功能代码是一样时，可以用穿透性把流程集中到同一处处理，这样可以简化代码;


循环结构:

for循环
控制一段代码反复执行很多次;

格式：
for (初始化语句 ; 循环条件; 迭代语句)  {
	循环体语句;
}
